#!/bin/bash

# Script to optimize and launch parallel tree-building script (AMFbuildTree_single.align.sh) 
# All paths are relative to the working directory

# extract top library database seqs

awk '/>ASV/{exit} 1' ./aligned_BLAST_ASVplusV18_052025_cut.fasta > \
    ./V18_LSUDB_052025_cut_aligned.fasta

#extract study sequences

awk '/>ASV/,EOF' ./aligned_BLAST_ASVplusV18_052025_cut.fasta > \
    ./BLAST_ASVrepseqs_clean_aligned.fasta

# divide the input fasta into subsets with this number of sequences ?
nSeqsPerSubset=15

# representative sequences (generated by AMFtrimmedToASVs.sh)
ASV_REPSEQ_FILE="./BLAST_ASVrepseqs_clean_aligned.fasta"

# reference sequence database
STATIC_FILE="./V18_LSUDB_052025_cut_aligned.fasta" 

# how many ASV representative sequences are there?
nRepSeqs=`grep -c '>' $ASV_REPSEQ_FILE`

# how many subsets will we need?
nSubsets=$(($nRepSeqs/$nSeqsPerSubset)) 
# it automatically rounds down, this gave us the number of FULL subsets.

# check if $nRepSeqs divided evenly by $nSeqsPerSubset; if not, add 1 subset
if [ $(($nRepSeqs%$nSeqsPerSubset)) == 0 ]
then
    echo "ASV rep seqs divided evenly into "$nSubsets" subsets of "$nSeqsPerSubset" sequences"
else
    echo "ASV rep seqs divide into "$nSubsets" subsets of "$nSeqsPerSubset" sequences, plus an extra subset of "$(($nRepSeqs%$nSeqsPerSubset))" sequences"
    ((nSubsets=nSubsets+1)) # increase the total number of subsets by 1
fi

echo "Launching RAXML tree building in parallel for "$nSubsets" subsets of ASV sequences..."

mkdir $2/tmp

sbatch --export=C_ENV=$1,SCRIPT_DIR=$2 --array=1-$nSubsets AMFbuildTree.sh
